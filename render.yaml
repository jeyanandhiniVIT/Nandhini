services:
  - type: web
    name: backend
    runtime: node
    repo: https://github.com/jeyanandhiniVIT/Nandhini.git # Replace with your repository URL
    branch: main # Or your default branch
    rootDir: backend
    buildFilter:
      paths:
      - backend/**
    buildCommand: "npm install && npm run build"
    startCommand: "npm start"
    envVars:
      - key: DATABASE_URL
        fromDatabase:
          name: postgres
          property: connectionString
      - key: NODE_ENV
        value: production
      - key: JWT_SECRET
        generateValue: true
      - key: GEMINI_API_KEY
        sync: false
      - key: CLOUDINARY_URL
        sync: false
      - key: CLOUDINARY_CLOUD_NAME
        sync: false
      - key: CLOUDINARY_API_KEY
        sync: false
      - key: CLOUDINARY_API_SECRET
        sync: false

  - type: web
    name: frontend
    runtime: static
    repo: https://github.com/jeyanandhiniVIT/Nandhini.git # Replace with your repository URL
    branch: main # Or your default branch
    buildFilter:
      paths:
      - App.tsx
      - constants.ts
      - index.html
      - index.tsx
      - metadata.json
      - package-lock.json
      - package.json
      - README.md
      - schema.prisma
      - tsconfig.json
      - types.ts
      - vite.config.ts
      - components/**
      - context/**
      - hooks/**
      - pages/**
      - prisma/**
      - services/**
      - utils/**
    buildCommand: "npm install && npm run build"
    staticPublishPath: dist
    routes:
      - type: rewrite
        source: /*
        destination: /index.html

databases:
  - name: postgres
    databaseName: nandhini
    user: nandhini
